
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package ru.power_umc.keepersofthestones.two.init;

import ru.power_umc.keepersofthestones.two.item.WaterStoneItem;
import ru.power_umc.keepersofthestones.two.item.WaterKatanaItem;
import ru.power_umc.keepersofthestones.two.item.WaterArmorItem;
import ru.power_umc.keepersofthestones.two.item.VacuumStoneItem;
import ru.power_umc.keepersofthestones.two.item.TornadoStoneItem;
import ru.power_umc.keepersofthestones.two.item.TornadoArmorItem;
import ru.power_umc.keepersofthestones.two.item.TimeStoneItem;
import ru.power_umc.keepersofthestones.two.item.TeleportationStoneItem;
import ru.power_umc.keepersofthestones.two.item.TechnologyStoneItem;
import ru.power_umc.keepersofthestones.two.item.SunStoneItem;
import ru.power_umc.keepersofthestones.two.item.SpiritStoneItem;
import ru.power_umc.keepersofthestones.two.item.SpeedStoneItem;
import ru.power_umc.keepersofthestones.two.item.SpaceStoneItem;
import ru.power_umc.keepersofthestones.two.item.SoundStoneItem;
import ru.power_umc.keepersofthestones.two.item.SoundArmorItem;
import ru.power_umc.keepersofthestones.two.item.SmokeStoneItem;
import ru.power_umc.keepersofthestones.two.item.ShadowStoneItem;
import ru.power_umc.keepersofthestones.two.item.SandStoneItem;
import ru.power_umc.keepersofthestones.two.item.RainStoneItem;
import ru.power_umc.keepersofthestones.two.item.RainArmorItem;
import ru.power_umc.keepersofthestones.two.item.PoisonStoneItem;
import ru.power_umc.keepersofthestones.two.item.PlantsStoneItem;
import ru.power_umc.keepersofthestones.two.item.PlantsArmorItem;
import ru.power_umc.keepersofthestones.two.item.PlagueStoneItem;
import ru.power_umc.keepersofthestones.two.item.OceanStoneItem;
import ru.power_umc.keepersofthestones.two.item.OceanArmorItem;
import ru.power_umc.keepersofthestones.two.item.MusicStoneItem;
import ru.power_umc.keepersofthestones.two.item.MushroomsStoneItem;
import ru.power_umc.keepersofthestones.two.item.MoonStoneItem;
import ru.power_umc.keepersofthestones.two.item.MistStoneItem;
import ru.power_umc.keepersofthestones.two.item.MindStoneItem;
import ru.power_umc.keepersofthestones.two.item.MetalStoneItem;
import ru.power_umc.keepersofthestones.two.item.MercuryStoneItem;
import ru.power_umc.keepersofthestones.two.item.MagnetStoneItem;
import ru.power_umc.keepersofthestones.two.item.MagicFireballItem;
import ru.power_umc.keepersofthestones.two.item.LightningStoneItem;
import ru.power_umc.keepersofthestones.two.item.LightningArmorItem;
import ru.power_umc.keepersofthestones.two.item.LightStoneItem;
import ru.power_umc.keepersofthestones.two.item.LavaStoneItem;
import ru.power_umc.keepersofthestones.two.item.LavaArmorItem;
import ru.power_umc.keepersofthestones.two.item.IceStoneItem;
import ru.power_umc.keepersofthestones.two.item.IceSpearItem;
import ru.power_umc.keepersofthestones.two.item.IceArmorItem;
import ru.power_umc.keepersofthestones.two.item.GravityStoneItem;
import ru.power_umc.keepersofthestones.two.item.GoldenDustStoneItem;
import ru.power_umc.keepersofthestones.two.item.FormStoneItem;
import ru.power_umc.keepersofthestones.two.item.FireSwordItem;
import ru.power_umc.keepersofthestones.two.item.FireStoneItem;
import ru.power_umc.keepersofthestones.two.item.FireArmorItem;
import ru.power_umc.keepersofthestones.two.item.ExplosionStoneItem;
import ru.power_umc.keepersofthestones.two.item.EtherStoneItem;
import ru.power_umc.keepersofthestones.two.item.EtherGlaiveItem;
import ru.power_umc.keepersofthestones.two.item.EtherArmorItem;
import ru.power_umc.keepersofthestones.two.item.EnergyStoneItem;
import ru.power_umc.keepersofthestones.two.item.EarthStoneItem;
import ru.power_umc.keepersofthestones.two.item.EarthShieldItem;
import ru.power_umc.keepersofthestones.two.item.EarthHammerItem;
import ru.power_umc.keepersofthestones.two.item.EarthArmorItem;
import ru.power_umc.keepersofthestones.two.item.DestructionStoneItem;
import ru.power_umc.keepersofthestones.two.item.DarknessStoneItem;
import ru.power_umc.keepersofthestones.two.item.CrystalStoneItem;
import ru.power_umc.keepersofthestones.two.item.CrystalArmorItem;
import ru.power_umc.keepersofthestones.two.item.CreationStoneItem;
import ru.power_umc.keepersofthestones.two.item.BlueFlameStoneItem;
import ru.power_umc.keepersofthestones.two.item.BloodStoneItem;
import ru.power_umc.keepersofthestones.two.item.AnimalsStoneItem;
import ru.power_umc.keepersofthestones.two.item.AmberStoneItem;
import ru.power_umc.keepersofthestones.two.item.AirStoneItem;
import ru.power_umc.keepersofthestones.two.item.AirRapierItem;
import ru.power_umc.keepersofthestones.two.item.AirArmorItem;
import ru.power_umc.keepersofthestones.two.PowerMod;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.BlockItem;

public class PowerModItems {
	public static final DeferredRegister<Item> REGISTRY = DeferredRegister.create(ForgeRegistries.ITEMS, PowerMod.MODID);
	public static final RegistryObject<Item> FIRE_STONE = REGISTRY.register("fire_stone", () -> new FireStoneItem());
	public static final RegistryObject<Item> AIR_STONE = REGISTRY.register("air_stone", () -> new AirStoneItem());
	public static final RegistryObject<Item> EARTH_STONE = REGISTRY.register("earth_stone", () -> new EarthStoneItem());
	public static final RegistryObject<Item> WATER_STONE = REGISTRY.register("water_stone", () -> new WaterStoneItem());
	public static final RegistryObject<Item> ETHER_STONE = REGISTRY.register("ether_stone", () -> new EtherStoneItem());
	public static final RegistryObject<Item> ICE_STONE = REGISTRY.register("ice_stone", () -> new IceStoneItem());
	public static final RegistryObject<Item> LIGHTNING_STONE = REGISTRY.register("lightning_stone", () -> new LightningStoneItem());
	public static final RegistryObject<Item> SOUND_STONE = REGISTRY.register("sound_stone", () -> new SoundStoneItem());
	public static final RegistryObject<Item> CRYSTAL_STONE = REGISTRY.register("crystal_stone", () -> new CrystalStoneItem());
	public static final RegistryObject<Item> LAVA_STONE = REGISTRY.register("lava_stone", () -> new LavaStoneItem());
	public static final RegistryObject<Item> RAIN_STONE = REGISTRY.register("rain_stone", () -> new RainStoneItem());
	public static final RegistryObject<Item> TORNADO_STONE = REGISTRY.register("tornado_stone", () -> new TornadoStoneItem());
	public static final RegistryObject<Item> OCEAN_STONE = REGISTRY.register("ocean_stone", () -> new OceanStoneItem());
	public static final RegistryObject<Item> PLANTS_STONE = REGISTRY.register("plants_stone", () -> new PlantsStoneItem());
	public static final RegistryObject<Item> ANIMALS_STONE = REGISTRY.register("animals_stone", () -> new AnimalsStoneItem());
	public static final RegistryObject<Item> METAL_STONE = REGISTRY.register("metal_stone", () -> new MetalStoneItem());
	public static final RegistryObject<Item> LIGHT_STONE = REGISTRY.register("light_stone", () -> new LightStoneItem());
	public static final RegistryObject<Item> SHADOW_STONE = REGISTRY.register("shadow_stone", () -> new ShadowStoneItem());
	public static final RegistryObject<Item> VACUUM_STONE = REGISTRY.register("vacuum_stone", () -> new VacuumStoneItem());
	public static final RegistryObject<Item> ENERGY_STONE = REGISTRY.register("energy_stone", () -> new EnergyStoneItem());
	public static final RegistryObject<Item> SUN_STONE = REGISTRY.register("sun_stone", () -> new SunStoneItem());
	public static final RegistryObject<Item> MOON_STONE = REGISTRY.register("moon_stone", () -> new MoonStoneItem());
	public static final RegistryObject<Item> SPACE_STONE = REGISTRY.register("space_stone", () -> new SpaceStoneItem());
	public static final RegistryObject<Item> TIME_STONE = REGISTRY.register("time_stone", () -> new TimeStoneItem());
	public static final RegistryObject<Item> BLOOD_STONE = REGISTRY.register("blood_stone", () -> new BloodStoneItem());
	public static final RegistryObject<Item> TECHNOLOGY_STONE = REGISTRY.register("technology_stone", () -> new TechnologyStoneItem());
	public static final RegistryObject<Item> TELEPORTATION_STONE = REGISTRY.register("teleportation_stone", () -> new TeleportationStoneItem());
	public static final RegistryObject<Item> EXPLOSION_STONE = REGISTRY.register("explosion_stone", () -> new ExplosionStoneItem());
	public static final RegistryObject<Item> AMBER_STONE = REGISTRY.register("amber_stone", () -> new AmberStoneItem());
	public static final RegistryObject<Item> CREATION_STONE = REGISTRY.register("creation_stone", () -> new CreationStoneItem());
	public static final RegistryObject<Item> DESTRUCTION_STONE = REGISTRY.register("destruction_stone", () -> new DestructionStoneItem());
	public static final RegistryObject<Item> MIST_STONE = REGISTRY.register("mist_stone", () -> new MistStoneItem());
	public static final RegistryObject<Item> SAND_STONE = REGISTRY.register("sand_stone", () -> new SandStoneItem());
	public static final RegistryObject<Item> SPEED_STONE = REGISTRY.register("speed_stone", () -> new SpeedStoneItem());
	public static final RegistryObject<Item> POISON_STONE = REGISTRY.register("poison_stone", () -> new PoisonStoneItem());
	public static final RegistryObject<Item> MAGNET_STONE = REGISTRY.register("magnet_stone", () -> new MagnetStoneItem());
	public static final RegistryObject<Item> MUSHROOMS_STONE = REGISTRY.register("mushrooms_stone", () -> new MushroomsStoneItem());
	public static final RegistryObject<Item> MERCURY_STONE = REGISTRY.register("mercury_stone", () -> new MercuryStoneItem());
	public static final RegistryObject<Item> MUSIC_STONE = REGISTRY.register("music_stone", () -> new MusicStoneItem());
	public static final RegistryObject<Item> PLAGUE_STONE = REGISTRY.register("plague_stone", () -> new PlagueStoneItem());
	public static final RegistryObject<Item> BLUE_FLAME_STONE = REGISTRY.register("blue_flame_stone", () -> new BlueFlameStoneItem());
	public static final RegistryObject<Item> GRAVITY_STONE = REGISTRY.register("gravity_stone", () -> new GravityStoneItem());
	public static final RegistryObject<Item> SMOKE_STONE = REGISTRY.register("smoke_stone", () -> new SmokeStoneItem());
	public static final RegistryObject<Item> SPIRIT_STONE = REGISTRY.register("spirit_stone", () -> new SpiritStoneItem());
	public static final RegistryObject<Item> FORM_STONE = REGISTRY.register("form_stone", () -> new FormStoneItem());
	public static final RegistryObject<Item> MIND_STONE = REGISTRY.register("mind_stone", () -> new MindStoneItem());
	public static final RegistryObject<Item> GOLDEN_DUST_STONE = REGISTRY.register("golden_dust_stone", () -> new GoldenDustStoneItem());
	public static final RegistryObject<Item> DARKNESS_STONE = REGISTRY.register("darkness_stone", () -> new DarknessStoneItem());
	public static final RegistryObject<Item> BASIC_BOX = block(PowerModBlocks.BASIC_BOX);
	public static final RegistryObject<Item> EARTH_SHIELD = REGISTRY.register("earth_shield", () -> new EarthShieldItem());
	public static final RegistryObject<Item> FIRE_ARMOR_HELMET = REGISTRY.register("fire_armor_helmet", () -> new FireArmorItem.Helmet());
	public static final RegistryObject<Item> FIRE_ARMOR_CHESTPLATE = REGISTRY.register("fire_armor_chestplate", () -> new FireArmorItem.Chestplate());
	public static final RegistryObject<Item> FIRE_ARMOR_LEGGINGS = REGISTRY.register("fire_armor_leggings", () -> new FireArmorItem.Leggings());
	public static final RegistryObject<Item> FIRE_ARMOR_BOOTS = REGISTRY.register("fire_armor_boots", () -> new FireArmorItem.Boots());
	public static final RegistryObject<Item> FIRE_SWORD = REGISTRY.register("fire_sword", () -> new FireSwordItem());
	public static final RegistryObject<Item> AIR_ARMOR_HELMET = REGISTRY.register("air_armor_helmet", () -> new AirArmorItem.Helmet());
	public static final RegistryObject<Item> AIR_ARMOR_CHESTPLATE = REGISTRY.register("air_armor_chestplate", () -> new AirArmorItem.Chestplate());
	public static final RegistryObject<Item> AIR_ARMOR_LEGGINGS = REGISTRY.register("air_armor_leggings", () -> new AirArmorItem.Leggings());
	public static final RegistryObject<Item> AIR_ARMOR_BOOTS = REGISTRY.register("air_armor_boots", () -> new AirArmorItem.Boots());
	public static final RegistryObject<Item> AIR_RAPIER = REGISTRY.register("air_rapier", () -> new AirRapierItem());
	public static final RegistryObject<Item> EARTH_ARMOR_HELMET = REGISTRY.register("earth_armor_helmet", () -> new EarthArmorItem.Helmet());
	public static final RegistryObject<Item> EARTH_ARMOR_CHESTPLATE = REGISTRY.register("earth_armor_chestplate", () -> new EarthArmorItem.Chestplate());
	public static final RegistryObject<Item> EARTH_ARMOR_LEGGINGS = REGISTRY.register("earth_armor_leggings", () -> new EarthArmorItem.Leggings());
	public static final RegistryObject<Item> EARTH_ARMOR_BOOTS = REGISTRY.register("earth_armor_boots", () -> new EarthArmorItem.Boots());
	public static final RegistryObject<Item> EARTH_HAMMER = REGISTRY.register("earth_hammer", () -> new EarthHammerItem());
	public static final RegistryObject<Item> WATER_KATANA = REGISTRY.register("water_katana", () -> new WaterKatanaItem());
	public static final RegistryObject<Item> WATER_ARMOR_HELMET = REGISTRY.register("water_armor_helmet", () -> new WaterArmorItem.Helmet());
	public static final RegistryObject<Item> WATER_ARMOR_CHESTPLATE = REGISTRY.register("water_armor_chestplate", () -> new WaterArmorItem.Chestplate());
	public static final RegistryObject<Item> WATER_ARMOR_LEGGINGS = REGISTRY.register("water_armor_leggings", () -> new WaterArmorItem.Leggings());
	public static final RegistryObject<Item> WATER_ARMOR_BOOTS = REGISTRY.register("water_armor_boots", () -> new WaterArmorItem.Boots());
	public static final RegistryObject<Item> ETHER_GLAIVE = REGISTRY.register("ether_glaive", () -> new EtherGlaiveItem());
	public static final RegistryObject<Item> ETHER_ARMOR_HELMET = REGISTRY.register("ether_armor_helmet", () -> new EtherArmorItem.Helmet());
	public static final RegistryObject<Item> ETHER_ARMOR_CHESTPLATE = REGISTRY.register("ether_armor_chestplate", () -> new EtherArmorItem.Chestplate());
	public static final RegistryObject<Item> ETHER_ARMOR_LEGGINGS = REGISTRY.register("ether_armor_leggings", () -> new EtherArmorItem.Leggings());
	public static final RegistryObject<Item> ETHER_ARMOR_BOOTS = REGISTRY.register("ether_armor_boots", () -> new EtherArmorItem.Boots());
	public static final RegistryObject<Item> ICE_ARMOR_HELMET = REGISTRY.register("ice_armor_helmet", () -> new IceArmorItem.Helmet());
	public static final RegistryObject<Item> ICE_ARMOR_CHESTPLATE = REGISTRY.register("ice_armor_chestplate", () -> new IceArmorItem.Chestplate());
	public static final RegistryObject<Item> ICE_ARMOR_LEGGINGS = REGISTRY.register("ice_armor_leggings", () -> new IceArmorItem.Leggings());
	public static final RegistryObject<Item> ICE_ARMOR_BOOTS = REGISTRY.register("ice_armor_boots", () -> new IceArmorItem.Boots());
	public static final RegistryObject<Item> LIGHTNING_ARMOR_HELMET = REGISTRY.register("lightning_armor_helmet", () -> new LightningArmorItem.Helmet());
	public static final RegistryObject<Item> LIGHTNING_ARMOR_CHESTPLATE = REGISTRY.register("lightning_armor_chestplate", () -> new LightningArmorItem.Chestplate());
	public static final RegistryObject<Item> LIGHTNING_ARMOR_LEGGINGS = REGISTRY.register("lightning_armor_leggings", () -> new LightningArmorItem.Leggings());
	public static final RegistryObject<Item> LIGHTNING_ARMOR_BOOTS = REGISTRY.register("lightning_armor_boots", () -> new LightningArmorItem.Boots());
	public static final RegistryObject<Item> MAGIC_FIREBALL = REGISTRY.register("magic_fireball", () -> new MagicFireballItem());
	public static final RegistryObject<Item> SOUND_ARMOR_HELMET = REGISTRY.register("sound_armor_helmet", () -> new SoundArmorItem.Helmet());
	public static final RegistryObject<Item> SOUND_ARMOR_CHESTPLATE = REGISTRY.register("sound_armor_chestplate", () -> new SoundArmorItem.Chestplate());
	public static final RegistryObject<Item> SOUND_ARMOR_LEGGINGS = REGISTRY.register("sound_armor_leggings", () -> new SoundArmorItem.Leggings());
	public static final RegistryObject<Item> SOUND_ARMOR_BOOTS = REGISTRY.register("sound_armor_boots", () -> new SoundArmorItem.Boots());
	public static final RegistryObject<Item> CRYSTAL_ARMOR_HELMET = REGISTRY.register("crystal_armor_helmet", () -> new CrystalArmorItem.Helmet());
	public static final RegistryObject<Item> CRYSTAL_ARMOR_CHESTPLATE = REGISTRY.register("crystal_armor_chestplate", () -> new CrystalArmorItem.Chestplate());
	public static final RegistryObject<Item> CRYSTAL_ARMOR_LEGGINGS = REGISTRY.register("crystal_armor_leggings", () -> new CrystalArmorItem.Leggings());
	public static final RegistryObject<Item> CRYSTAL_ARMOR_BOOTS = REGISTRY.register("crystal_armor_boots", () -> new CrystalArmorItem.Boots());
	public static final RegistryObject<Item> LAVA_ARMOR_HELMET = REGISTRY.register("lava_armor_helmet", () -> new LavaArmorItem.Helmet());
	public static final RegistryObject<Item> LAVA_ARMOR_CHESTPLATE = REGISTRY.register("lava_armor_chestplate", () -> new LavaArmorItem.Chestplate());
	public static final RegistryObject<Item> LAVA_ARMOR_LEGGINGS = REGISTRY.register("lava_armor_leggings", () -> new LavaArmorItem.Leggings());
	public static final RegistryObject<Item> LAVA_ARMOR_BOOTS = REGISTRY.register("lava_armor_boots", () -> new LavaArmorItem.Boots());
	public static final RegistryObject<Item> ICE_SPEAR = REGISTRY.register("ice_spear", () -> new IceSpearItem());
	public static final RegistryObject<Item> RAIN_ARMOR_HELMET = REGISTRY.register("rain_armor_helmet", () -> new RainArmorItem.Helmet());
	public static final RegistryObject<Item> RAIN_ARMOR_CHESTPLATE = REGISTRY.register("rain_armor_chestplate", () -> new RainArmorItem.Chestplate());
	public static final RegistryObject<Item> RAIN_ARMOR_LEGGINGS = REGISTRY.register("rain_armor_leggings", () -> new RainArmorItem.Leggings());
	public static final RegistryObject<Item> RAIN_ARMOR_BOOTS = REGISTRY.register("rain_armor_boots", () -> new RainArmorItem.Boots());
	public static final RegistryObject<Item> TORNADO_ARMOR_HELMET = REGISTRY.register("tornado_armor_helmet", () -> new TornadoArmorItem.Helmet());
	public static final RegistryObject<Item> TORNADO_ARMOR_CHESTPLATE = REGISTRY.register("tornado_armor_chestplate", () -> new TornadoArmorItem.Chestplate());
	public static final RegistryObject<Item> TORNADO_ARMOR_LEGGINGS = REGISTRY.register("tornado_armor_leggings", () -> new TornadoArmorItem.Leggings());
	public static final RegistryObject<Item> TORNADO_ARMOR_BOOTS = REGISTRY.register("tornado_armor_boots", () -> new TornadoArmorItem.Boots());
	public static final RegistryObject<Item> OCEAN_ARMOR_HELMET = REGISTRY.register("ocean_armor_helmet", () -> new OceanArmorItem.Helmet());
	public static final RegistryObject<Item> OCEAN_ARMOR_CHESTPLATE = REGISTRY.register("ocean_armor_chestplate", () -> new OceanArmorItem.Chestplate());
	public static final RegistryObject<Item> OCEAN_ARMOR_LEGGINGS = REGISTRY.register("ocean_armor_leggings", () -> new OceanArmorItem.Leggings());
	public static final RegistryObject<Item> OCEAN_ARMOR_BOOTS = REGISTRY.register("ocean_armor_boots", () -> new OceanArmorItem.Boots());
	public static final RegistryObject<Item> PLANTS_ARMOR_HELMET = REGISTRY.register("plants_armor_helmet", () -> new PlantsArmorItem.Helmet());
	public static final RegistryObject<Item> PLANTS_ARMOR_CHESTPLATE = REGISTRY.register("plants_armor_chestplate", () -> new PlantsArmorItem.Chestplate());
	public static final RegistryObject<Item> PLANTS_ARMOR_LEGGINGS = REGISTRY.register("plants_armor_leggings", () -> new PlantsArmorItem.Leggings());
	public static final RegistryObject<Item> PLANTS_ARMOR_BOOTS = REGISTRY.register("plants_armor_boots", () -> new PlantsArmorItem.Boots());

	private static RegistryObject<Item> block(RegistryObject<Block> block) {
		return REGISTRY.register(block.getId().getPath(), () -> new BlockItem(block.get(), new Item.Properties()));
	}
}
